//1.#89 Testing Objects for Properties
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties
function checkObj(obj, checkProp) {
    // Only change code below this line
    if (obj.hasOwnProperty(checkProp)){
        return obj[checkProp];
    } else {
        return "Not Found";
    }
    // Only change code above this line
}

//2.#90 Manipulating Complex Objects
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulating-complex-objects
var myMusic = [
    {
        "artist": "Billy Joel",
        "title": "Piano Man",
        "release_year": 1973,
        "formats": [
            "CD",
            "8T",
            "LP"
        ],
        "gold": true
    },
    {
        "artist": "Mikael",
        "title": "someTitle",
        "release_year": 2021,
        "formats": [
            "CD1",
            "8T1",
            "LP1"
        ],
        "gold": false
    }
];

//3.#91 Accessing Nested Objects
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-objects
var myStorage = {
    "car": {
        "inside": {
            "glove box": "maps",
            "passenger seat": "crumbs"
        },
        "outside": {
            "trunk": "jack"
        }
    }
};

var gloveBoxContents = myStorage.car.inside["glove box"];

//4.#92 Accessing Nested Arrays
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays
var myPlants = [
    {
        type: "flowers",
        list: [
            "rose",
            "tulip",
            "dandelion"
        ]
    },
    {
        type: "trees",
        list: [
            "fir",
            "pine",
            "birch"
        ]
    }
];

var secondTree = myPlants[1].list[1];

//5.#93 Record Collection
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/record-collection
// Setup
var recordCollection = {
    2548: {
        albumTitle: 'Slippery When Wet',
        artist: 'Bon Jovi',
        tracks: ['Let It Rock', 'You Give Love a Bad Name']
    },
    2468: {
        albumTitle: '1999',
        artist: 'Prince',
        tracks: ['1999', 'Little Red Corvette']
    },
    1245: {
        artist: 'Robert Palmer',
        tracks: []
    },
    5439: {
        albumTitle: 'ABBA Gold'
    }
};
// Only change code below this line
function updateRecords(records, id, prop, value) {
    if(prop !== "tracks" && value !== ""){
        records[id][prop] = value;
    } else if (prop === "tracks" && records[id].hasOwnProperty("tracks") === false && value !== ""){
        records[id][prop] = [value];
    } else if (prop === "tracks" && records[id].hasOwnProperty("tracks") && value !== ""){
        records[id].tracks.push(value);
    } else if (value == ""){
        delete records[id][prop];
    }
    return records;
}

updateRecords(recordCollection, 5439, 'artist', 'ABBA');

//6.#94 Iterate with JavaScript While Loops
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops
// Setup
var myArray = [];

// Only change code below this line
var i = 5;
while(i>=0){
    myArray.push(i);
    i--;
}

//7.#95 Iterate with JavaScript For Loops
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-for-loops
// Setup
var myArray = [];

// Only change code below this line
for(let i=1; i<=5;i++){
    myArray.push(i);
}

//8.#96 Iterate Odd Numbers With a For Loop
//https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-odd-numbers-with-a-for-loop
// Setup
var myArray = [];

// Only change code below this line
for(let i=1;i<=9;i+=2){
    myArray.push(i);
}